name: Test Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ['1.24.4']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: true

    - name: Update all Go dependencies
      run: |
        go get -u all
        go mod tidy

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Run build
      run: |
        echo "Running build on ${{ matrix.os }}"
        go build -v -o github-profiler .

    - name: Test binary (Unix)
      if: runner.os != 'Windows'
      run: |
        ./github-profiler --help
        echo "q" | ./github-profiler demo

    - name: Test binary (Windows)
      if: runner.os == 'Windows'
      run: |
        ./github-profiler.exe --help
        echo "q" | ./github-profiler.exe demo

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest'
      with:
        file: ./coverage.out
        fail_ci_if_error: false
